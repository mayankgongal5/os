class FCFS {
    public static void main(String[] args) {
        // Predefined burst times for processes
        int[] burstTime = {10, 5, 8, 3};
        int n = burstTime.length;

        int[] waitingTime = new int[n];
        int[] turnaroundTime = new int[n];

        // Calculate waiting time and turnaround time
        waitingTime[0] = 0;
        turnaroundTime[0] = burstTime[0];

        for (int i = 1; i < n; i++) {
            waitingTime[i] = waitingTime[i - 1] + burstTime[i - 1];
            turnaroundTime[i] = waitingTime[i] + burstTime[i];
        }

        // Calculate average waiting time and average turnaround time
        double avgWaitingTime = calculateAverage(waitingTime);
        double avgTurnaroundTime = calculateAverage(turnaroundTime);

        // Display results
        System.out.println("\nProcess\tBurst Time\tWaiting Time\tTurnaround Time");
        for (int i = 0; i < n; i++) {
            System.out.println((i + 1) + "\t\t" + burstTime[i] + "\t\t" + waitingTime[i] + "\t\t" + turnaroundTime[i]);
        }

        System.out.println("\nAverage Waiting Time: " + avgWaitingTime);
        System.out.println("Average Turnaround Time: " + avgTurnaroundTime);
    }

    private static double calculateAverage(int[] array) {
        int sum = 0;
        for (int value : array) {
            sum += value;
        }
        return (double) sum / array.length;
    }
}

First Come First Serve (FCFS) is a simple CPU scheduling algorithm where processes are executed in the order they arrive in the ready queue. The first process to arrive is the first to be executed. FCFS is non-preemptive, meaning once a process starts executing, it continues until completion. This algorithm is easy to understand and implement, but it may suffer from "convoy effect," where smaller processes get delayed behind larger ones. It exhibits a First-In-First-Out (FIFO) behavior and has a low complexity. However, FCFS may lead to poor turnaround times, especially in scenarios where shorter processes are queued behind longer ones. Despite its limitations, FCFS provides a baseline for understanding more complex scheduling algorithms and their optimizations in computer systems. Implementing FCFS involves maintaining a queue, managing process arrival times, and executing processes sequentially as per their arrival order.

